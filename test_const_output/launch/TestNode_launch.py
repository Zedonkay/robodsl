# Generated by RoboDSL - DO NOT EDIT

import os
from launch import LaunchDescription
from launch.actions import DeclareLaunchArgument
from launch.substitutions import LaunchConfiguration
from launch_ros.actions import Node, LifecycleNode
from ament_index_python.packages import get_package_share_directory

def generate_launch_description():
    # Get the package directory
    pkg_dir = get_package_share_directory('')
    
    # Launch arguments
    launch_arguments = [
        DeclareLaunchArgument(
            'use_sim_time',
            default_value='false',
            description='Use simulation (Gazebo) clock if true'
        ),
        DeclareLaunchArgument(
            'use_rviz',
            default_value='false',
            description='Start RViz2 automatically if true'
        )
    ]

    # Main node configuration
    node_params = {
        'package': '',
        'executable': 'TestNode_node',
        'name': 'TestNode',
        'output': 'screen',
        'parameters': [],
        'arguments': ['--ros-args', '--log-level', 'info']
    }

    # Add namespace if specified
    node_params['namespace'] = '/TestNode'

    # Add parameters

    # Add remappings

    # Add environment variables

    # Create the appropriate node type
    node = Node(**node_params)

    # Create launch description with arguments
    ld = LaunchDescription(launch_arguments)
    ld.add_action(node)
    
    # Add any additional nodes
    
    return ld
