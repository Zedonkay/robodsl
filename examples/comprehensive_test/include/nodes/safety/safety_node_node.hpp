// Generated by RoboDSL - DO NOT EDIT

#ifndef SAFETY_NODE_NODE_HPP
#define SAFETY_NODE_NODE_HPP

// Standard includes
#include <memory>
#include <string>
#include <vector>
#include <map>
#include <cmath>
#include <functional>
#include <thread>
#include <atomic>

// ROS2 includes
#include <rclcpp/rclcpp.hpp>

// Message includes
#include <geometry_msgs/msg/twist.hpp>
#include <sensor_msgs/msg/laser_scan.hpp>
#include <std_msgs/msg/bool.hpp>

// Additional ROS2 includes

// CUDA includes (if needed)

// OpenCV includes (if needed)

// Type definitions
#ifndef __UCHAR_TYPE__
typedef unsigned char uchar;
#endif

// Forward declarations for custom types

// CUDA parameter structs

namespace safety {

class Safety_nodeNode : public rclcpp::Node {
public:
    explicit Safety_nodeNode(const rclcpp::NodeOptions& options = rclcpp::NodeOptions());
    virtual ~Safety_nodeNode();


    // Timer callbacks
    void on_safety_timer();

    // Subscriber callbacks
    void on_sensor_data(const sensor_msgs::msg::LaserScan::ConstSharedPtr msg);
    void on_cmd_vel(const geometry_msgs::msg::Twist::ConstSharedPtr msg);

    // Service callbacks



    // User-defined C++ methods

private:
    // Publishers
    std::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::Twist>> safe_cmd_vel_pub_;
    std::shared_ptr<rclcpp::Publisher<std_msgs::msg::Bool>> emergency_stop_pub_;

    // Subscribers
    rclcpp::Subscription<sensor_msgs::msg::LaserScan>::SharedPtr sensor_data_sub_;
    rclcpp::Subscription<geometry_msgs::msg::Twist>::SharedPtr cmd_vel_sub_;

    // Services


    // Timers
    rclcpp::TimerBase::SharedPtr safety_timer_timer_;

    // Lifecycle state tracking

    
    // Processing control
    bool enable_processing_{true};

    // Parameters
    // Parameter max_acceleration of type float not supported in member variables
    // Parameter emergency_stop_distance of type float not supported in member variables
    bool enable_emergency_stop_;

    // Latest message storage
    sensor_msgs::msg::LaserScan::ConstSharedPtr latest_scan_;
    geometry_msgs::msg::Twist::ConstSharedPtr latest_twist_;

    // CUDA kernel member variables

    // Helper methods
    void init_parameters();
    void init_publishers();
    void init_subscribers();
    void init_services();
    void init_timers();
};

} // namespace safety

#endif // SAFETY_NODE_NODE_HPP
