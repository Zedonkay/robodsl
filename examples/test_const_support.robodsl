node TestNode {
    method test_method {
        input: const float* input_data (N)
        output: const int* output_data (N)
        code: {
            // Test method implementation
            for (int i = 0; i < N; i++) {
                output_data[i] = static_cast<int>(input_data[i]);
            }
        }
    }
    
    kernel test_kernel {
        input: const unsigned char* input_image (width, height)
        output: const float* output_image (width, height)
        block_size: (32, 32, 1)
        grid_size: (1, 1, 1)
        use_thrust: true
        code: {
            // Test kernel implementation
            int idx = blockIdx.x * blockDim.x + threadIdx.x;
            if (idx < width * height) {
                output_image[idx] = static_cast<float>(input_image[idx]) / 255.0f;
            }
        }
    }
} 