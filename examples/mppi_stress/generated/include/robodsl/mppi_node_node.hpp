// Generated by RoboDSL - DO NOT EDIT

#ifndef ROBODSL_MPPI_NODE_NODE_HPP_
#define ROBODSL_MPPI_NODE_NODE_HPP_

#include "rclcpp/rclcpp.hpp"
#include <string>
#include <vector>
#include <map>

#include "std_msgs/msg/Float32.hpp"
#include "std_msgs/msg/Float32MultiArray.hpp"

namespace robodsl {

class MppiNode : public rclcpp::Node {
public:
    MppiNode();
    virtual ~MppiNode();

private:
    // ROS2 Publishers
    rclcpp::Publisher<std_msgs::msg::Float32>::SharedPtr control_pub_;

    
    // ROS2 Subscribers
    rclcpp::Subscription<std_msgs::msg::Float32>::SharedPtr state_sub_;
    void state_callback(const std_msgs::msg::Float32::SharedPtr msg) const;
    rclcpp::Subscription<std_msgs::msg::Float32MultiArray>::SharedPtr estimated_state_sub_;
    void estimated_state_callback(const std_msgs::msg::Float32MultiArray::SharedPtr msg) const;

    
    // ROS2 Services
    // No services declared

    
    // Parameters
    // Parameters
    int rollout_count_;
    double w_position_;
    double w_velocity_;
    double w_control_;
    double w_obstacle_;


    // CUDA Kernels
    // No CUDA kernels for this node

};


}  // namespace robodsl

#endif  // ROBODSL_MPPI_NODE_NODE_HPP_
