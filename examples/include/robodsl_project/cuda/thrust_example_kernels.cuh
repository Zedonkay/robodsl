// Generated by RoboDSL - DO NOT EDIT

#ifndef 
#define 


// Dummy implementation when CUDA is not enabled
#include <vector>
#include <string>

namespace <class 'jinja2.utils.Namespace'> {

class Kernel {
public:
    explicit Kernel(void* /*stream*/ = nullptr) {}
    ~Kernel() = default;
    
    bool initialize(const std::vector<>& /*input*/) { 
        return false; 
    }
    
    std::vector<> process(const & /*parameters*/) {
        return {};
    }
    
    std::string getLastError() const { 
        return "CUDA support not compiled in"; 
    }
    
    bool isInitialized() const { return false; }
};

} // namespace <class 'jinja2.utils.Namespace'>


#endif // 