FROM scratch
ADD debian-bullseye-minimal.tar.xz /

# Set up the environment
ENV DEBIAN_FRONTEND=noninteractive \
    PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

# Create necessary directories
RUN mkdir -p /usr/share/man/man1 /usr/share/man/man2 /usr/share/man/man3 /usr/share/man/man4 \
    /usr/share/man/man5 /usr/share/man/man6 /usr/share/man/man7 /usr/share/man/man8 \
    /var/cache/apt/archives/partial \
    /var/lib/apt/lists/partial \
    /var/log/apt \
    /var/cache/debconf \
    /etc/apt/apt.conf.d \
    /etc/apt/preferences.d \
    /etc/apt/sources.list.d \
    /etc/dpkg/dpkg.cfg.d \
    /usr/local/share/ca-certificates \
    /usr/share/ca-certificates \
    /etc/ssl/certs \
    /etc/ca-certificates/update.d \
    /usr/share/keyrings \
    /etc/apt/trusted.gpg.d \
    /var/lib/apt/lists/auxfiles

# Create a minimal sources.list
RUN echo 'deb http://deb.debian.org/debian bullseye main' > /etc/apt/sources.list && \
    echo 'deb http://deb.debian.org/debian bullseye-updates main' >> /etc/apt/sources.list && \
    echo 'deb http://security.debian.org/debian-security bullseye-security main' >> /etc/apt/sources.list

# Set up the build environment
WORKDIR /build

# Copy the build script
COPY build-in-docker.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/build-in-docker.sh

# Set the entrypoint
ENTRYPOINT ["/usr/local/bin/build-in-docker.sh"]
