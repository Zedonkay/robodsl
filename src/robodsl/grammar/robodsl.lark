// RoboDSL Grammar - Phase 1.5+ (Enhanced)

%ignore _WS
%ignore COMMENT   // Officially recognize // as a comment
%ignore BLOCK_COMMENT
%ignore _NL

start: include_stmt* (node_def | cuda_kernels_block | onnx_model | pipeline_def)*

// Include statements
include_stmt: "include" ("<" include_path ">" | STRING)
include_path: STRING | NAME ("/" NAME)* ("." NAME)?

// Node definitions
node_def: "node" NAME LBRACE node_content RBRACE
node_content: (parameter | lifecycle | timer | remap | namespace | ros_primitive | flag | cpp_method | kernel_def | onnx_model_ref)*

// Pipeline definitions (Phase 4)
pipeline_def: "pipeline" NAME LBRACE pipeline_content RBRACE
pipeline_content: stage_def*
stage_def: "stage" NAME LBRACE stage_content RBRACE
stage_content: (stage_input | stage_output | stage_method | stage_model | stage_topic)*
stage_input: "input" ":" STRING
stage_output: "output" ":" STRING
stage_method: "method" ":" STRING
stage_model: "model" ":" STRING
stage_topic: "topic" ":" TOPIC_PATH

// ONNX Model definitions (Phase 3)
onnx_model: "onnx_model" STRING LBRACE model_config RBRACE
onnx_model_ref: "onnx_model" STRING LBRACE model_config RBRACE
model_config: (input_def | output_def | device | optimization)*
input_def: "input" ":" STRING "->" STRING
output_def: "output" ":" STRING "->" STRING
device: "device" ":" device_type
device_type: NAME
optimization: "optimization" ":" optimization_type
optimization_type: NAME

// Parameters
parameter: "parameter" NAME ":" value

// Lifecycle configuration
lifecycle: "lifecycle" LBRACE lifecycle_config RBRACE
lifecycle_config: lifecycle_setting*
lifecycle_setting: NAME ":" BOOLEAN

// Timers
// Allow negative numbers
// Allow expressions in period
// (for now, just allow number, but can extend to expr)
timer: "timer" NAME ":" expr timer_config?
timer_config: LBRACE timer_setting* RBRACE
timer_setting: NAME ":" BOOLEAN

// Remaps
remap: "remap" ("from:" TOPIC_PATH "to:" TOPIC_PATH | TOPIC_PATH ":" TOPIC_PATH)

// Namespaces
namespace: "namespace" (":"? TOPIC_PATH)

// ROS primitives
ros_primitive: publisher | subscriber | service | client | action
publisher: "publisher" topic_path ":" STRING publisher_config?
subscriber: "subscriber" topic_path ":" STRING subscriber_config?
service: "service" topic_path ":" STRING service_config?
client: "client" topic_path ":" STRING client_config?
action: "action" topic_path ":" STRING action_config?

publisher_config: LBRACE publisher_setting* RBRACE
subscriber_config: LBRACE subscriber_setting* RBRACE
service_config: LBRACE service_setting* RBRACE
client_config: LBRACE client_setting* RBRACE
action_config: LBRACE action_setting* RBRACE

publisher_setting: qos_config
subscriber_setting: qos_config
service_setting: qos_config
client_setting: qos_config
action_setting: qos_config

topic_path: "/" NAME ("/" NAME)*

// Flags
flag: "flag" NAME ":" BOOLEAN

// Enhanced C++ methods (Phase 2)
cpp_method: "method" NAME LBRACE method_content RBRACE
method_content: (input_param | output_param | code_block)*
input_param: "input" ":" cpp_type NAME input_param_size?
output_param: "output" ":" cpp_type NAME output_param_size?
input_param_size: LPAR method_param_size_list RPAR
output_param_size: LPAR method_param_size_list RPAR
method_param_size_list: method_param_size_item (COMMA method_param_size_item)*
method_param_size_item: SIGNED_NUMBER | NAME | STRING | dotted_name

// CUDA kernels block
cuda_kernels_block: "cuda_kernels" LBRACE kernel_def* RBRACE
kernel_def: "kernel" NAME LBRACE kernel_content RBRACE
kernel_content: (block_size | grid_size | shared_memory | use_thrust | kernel_input_param | kernel_output_param | code_block)*

block_size: "block_size" ":" LPAR expr COMMA expr COMMA expr RPAR
grid_size: "grid_size" ":" LPAR expr COMMA expr COMMA expr RPAR
shared_memory: "shared_memory" ":" expr
use_thrust: "use_thrust" ":" BOOLEAN
kernel_input_param: "input" ":" cpp_type NAME kernel_param_size?
kernel_output_param: "output" ":" cpp_type NAME kernel_param_size?
cpp_type: cpp_type_name
cpp_type_name: /[a-zA-Z_][a-zA-Z0-9_]*(\**|\:\:[a-zA-Z_][a-zA-Z0-9_]*(\**)?)*(\<[^>]*\>)?/
kernel_param_size: LPAR kernel_param_size_list RPAR
kernel_param_size_list: kernel_param_size_item (COMMA kernel_param_size_item)*
kernel_param_size_item: SIGNED_NUMBER | NAME | STRING

dotted_name: NAME (DOT NAME | LPAR (dotted_name (COMMA dotted_name)*)? RPAR)+

// Code blocks use C++/CUDA curly braces, not triple quotes or strings
code_block: "code" ":"? balanced_braces
balanced_braces: "{" balanced_content* "}"
balanced_content: /[^{}]+/ | balanced_braces

// Values
value: primitive | array | nested_dict

primitive: BOOLEAN | STRING | expr

array: LSQB value_list RSQB
value_list: (value (COMMA value)*)?

nested_dict: LBRACE dict_list RBRACE
dict_list: (dict_item (dict_sep? dict_item)*)?
dict_item: NAME ":" value
dict_sep: COMMA | _NL

// Expressions for block/grid size and parameter sizes
expr: signed_atom (binop signed_atom)*
signed_atom: SIGNED_NUMBER | NAME | dotted_name | LPAR expr RPAR
binop: "+" | "-" | "*" | "/" | "%" | "^"

// Topics must start with /
TOPIC_PATH: /\/[a-zA-Z_][a-zA-Z0-9_\/\.]*/

// Terminals
STAR: "*"
DOT: "."
LPAR: "("
RPAR: ")"
LSQB: "["
RSQB: "]"
LBRACE: "{"
RBRACE: "}"
COMMA: ","
LESSTHAN: "<"
MORETHAN: ">"
SIGNED_NUMBER: /-?[0-9]+(\.[0-9]+)?/
NAME: /[a-zA-Z_][a-zA-Z0-9_]*/
STRING: /"([^"\\]|\\.)*"/
BOOLEAN: "true" | "false"
TYPE: /[a-zA-Z_][a-zA-Z0-9_]*(\[[0-9,]*\])?/

// Block comments and line comments
BLOCK_COMMENT: /\/\*[\s\S]*?\*\//
COMMENT: /\/\/[^\n]*/

// Ignore whitespace and comments
_NL: /(\r?\n)+\s*/
_WS: /[ \t]+/

// QoS configuration
qos_config: "qos" LBRACE qos_setting* RBRACE
qos_setting: NAME ":" qos_value
qos_value: expr