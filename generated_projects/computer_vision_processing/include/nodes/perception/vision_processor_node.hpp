// Generated by RoboDSL - DO NOT EDIT

#ifndef VISION_PROCESSOR_NODE_HPP
#define VISION_PROCESSOR_NODE_HPP

// Standard includes
#include <memory>
#include <string>
#include <vector>
#include <map>
#include <cmath>
#include <functional>
#include <thread>
#include <atomic>

// ROS2 includes
#include <rclcpp/rclcpp.hpp>
#include <rclcpp_lifecycle/lifecycle_node.hpp>
#include <rclcpp_lifecycle/lifecycle_publisher.hpp>
#include <rclcpp_lifecycle/node_interfaces/lifecycle_node_interface.hpp>

// Message includes
#include <sensor_msgs/msg/camera_info.hpp>
#include <sensor_msgs/msg/image.hpp>
#include <std_msgs/msg/float32_multi_array.hpp>

// Additional ROS2 includes

// CUDA includes (if needed)

// OpenCV includes (if needed)

// Type definitions
#ifndef __UCHAR_TYPE__
typedef unsigned char uchar;
#endif

// Forward declarations for custom types

// CUDA parameter structs


class Vision_processorNode : public rclcpp_lifecycle::LifecycleNode {
public:
    explicit Vision_processorNode(const rclcpp::NodeOptions& options = rclcpp::NodeOptions());
    virtual ~Vision_processorNode();

    // Lifecycle callbacks
    rclcpp_lifecycle::node_interfaces::LifecycleNodeInterface::CallbackReturn 
    on_configure(const rclcpp_lifecycle::State& previous_state) override;
    
    rclcpp_lifecycle::node_interfaces::LifecycleNodeInterface::CallbackReturn 
    on_activate(const rclcpp_lifecycle::State& previous_state) override;
    
    rclcpp_lifecycle::node_interfaces::LifecycleNodeInterface::CallbackReturn 
    on_deactivate(const rclcpp_lifecycle::State& previous_state) override;
    
    rclcpp_lifecycle::node_interfaces::LifecycleNodeInterface::CallbackReturn 
    on_cleanup(const rclcpp_lifecycle::State& previous_state) override;
    
    rclcpp_lifecycle::node_interfaces::LifecycleNodeInterface::CallbackReturn 
    on_shutdown(const rclcpp_lifecycle::State& previous_state) override;

    // Timer callbacks
    void on_processing_timer();

    // Subscriber callbacks
    void on_camera_image_raw(const sensor_msgs::msg::Image::ConstSharedPtr msg);
    void on_camera_camera_info(const sensor_msgs::msg::CameraInfo::ConstSharedPtr msg);
    void on_camera2_image_raw(const sensor_msgs::msg::Image::ConstSharedPtr msg);
    void on_camera2_camera_info(const sensor_msgs::msg::CameraInfo::ConstSharedPtr msg);

    // Service callbacks



    // User-defined C++ methods

private:
    // Publishers
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<sensor_msgs::msg::Image>> vision_processed_image_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<std_msgs::msg::Float32MultiArray>> vision_detected_objects_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<std_msgs::msg::Float32MultiArray>> vision_face_embeddings_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<std_msgs::msg::Float32MultiArray>> vision_human_poses_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<sensor_msgs::msg::Image>> vision_depth_map_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<sensor_msgs::msg::Image>> vision_optical_flow_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<std_msgs::msg::Float32MultiArray>> vision_feature_matches_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<sensor_msgs::msg::Image>> vision_edge_map_pub_;

    // Subscribers
    rclcpp::Subscription<sensor_msgs::msg::Image>::SharedPtr camera_image_raw_sub_;
    rclcpp::Subscription<sensor_msgs::msg::CameraInfo>::SharedPtr camera_camera_info_sub_;
    rclcpp::Subscription<sensor_msgs::msg::Image>::SharedPtr camera2_image_raw_sub_;
    rclcpp::Subscription<sensor_msgs::msg::CameraInfo>::SharedPtr camera2_camera_info_sub_;

    // Services


    // Timers
    rclcpp::TimerBase::SharedPtr processing_timer_timer_;

    // Lifecycle state tracking
    std::atomic<bool> is_active_{false};
    bool processing_timer_was_active_{false};

    
    // Processing control
    bool enable_processing_{true};

    // Parameters
    double processing_frequency_;
    int image_width_;
    int image_height_;
    int resize_width_;
    int resize_height_;
    double confidence_threshold_;
    double nms_threshold_;
    int max_detections_;
    bool enable_edge_detection_;
    bool enable_optical_flow_;
    bool enable_feature_matching_;
    double gaussian_blur_sigma_;
    double edge_detection_threshold_;
    // Parameter object_detector_path of type string not supported in member variables
    // Parameter face_recognition_path of type string not supported in member variables
    // Parameter pose_estimation_path of type string not supported in member variables
    // Parameter depth_estimation_path of type string not supported in member variables
    // Parameter optical_flow_path of type string not supported in member variables

    // Latest message storage (per-subscriber)
    sensor_msgs::msg::Image::ConstSharedPtr latest_camera_image_raw_;
    sensor_msgs::msg::CameraInfo::ConstSharedPtr latest_camera_camera_info_;
    sensor_msgs::msg::Image::ConstSharedPtr latest_camera2_image_raw_;
    sensor_msgs::msg::CameraInfo::ConstSharedPtr latest_camera2_camera_info_;

    // CUDA kernel member variables

    // Helper methods
    void init_parameters();
    void init_publishers();
    void init_subscribers();
    void init_services();
    void init_timers();
};


#endif // VISION_PROCESSOR_NODE_HPP
