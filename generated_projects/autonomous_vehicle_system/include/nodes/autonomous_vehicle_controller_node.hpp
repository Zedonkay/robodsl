// Generated by RoboDSL - DO NOT EDIT

#ifndef AUTONOMOUS_VEHICLE_CONTROLLER_NODE_HPP
#define AUTONOMOUS_VEHICLE_CONTROLLER_NODE_HPP

// Standard includes
#include <memory>
#include <string>
#include <vector>
#include <map>
#include <cmath>
#include <functional>
#include <thread>
#include <atomic>

// ROS2 includes
#include <rclcpp/rclcpp.hpp>
#include <rclcpp_lifecycle/lifecycle_node.hpp>
#include <rclcpp_lifecycle/lifecycle_publisher.hpp>
#include <rclcpp_lifecycle/node_interfaces/lifecycle_node_interface.hpp>

// Message includes
#include <sensor_msgs/msg/image.hpp>
#include <sensor_msgs/msg/imu.hpp>
#include <sensor_msgs/msg/point_cloud2.hpp>
#include <std_msgs/msg/bool.hpp>
#include <std_msgs/msg/float64_multi_array.hpp>

// Additional ROS2 includes

// CUDA includes (if needed)

// OpenCV includes (if needed)

// Type definitions
#ifndef __UCHAR_TYPE__
typedef unsigned char uchar;
#endif

// Forward declarations for custom types

// CUDA parameter structs


class Autonomous_vehicle_controllerNode : public rclcpp_lifecycle::LifecycleNode {
public:
    explicit Autonomous_vehicle_controllerNode(const rclcpp::NodeOptions& options = rclcpp::NodeOptions());
    virtual ~Autonomous_vehicle_controllerNode();

    // Lifecycle callbacks
    rclcpp_lifecycle::node_interfaces::LifecycleNodeInterface::CallbackReturn 
    on_configure(const rclcpp_lifecycle::State& previous_state) override;
    
    rclcpp_lifecycle::node_interfaces::LifecycleNodeInterface::CallbackReturn 
    on_activate(const rclcpp_lifecycle::State& previous_state) override;
    
    rclcpp_lifecycle::node_interfaces::LifecycleNodeInterface::CallbackReturn 
    on_deactivate(const rclcpp_lifecycle::State& previous_state) override;
    
    rclcpp_lifecycle::node_interfaces::LifecycleNodeInterface::CallbackReturn 
    on_cleanup(const rclcpp_lifecycle::State& previous_state) override;
    
    rclcpp_lifecycle::node_interfaces::LifecycleNodeInterface::CallbackReturn 
    on_shutdown(const rclcpp_lifecycle::State& previous_state) override;

    // Timer callbacks
    void on_control_timer();
    void on_perception_timer();
    void on_planning_timer();

    // Subscriber callbacks
    void on_sensor_lidar_points(const sensor_msgs::msg::PointCloud2::ConstSharedPtr msg);
    void on_sensor_camera_front_image(const sensor_msgs::msg::Image::ConstSharedPtr msg);
    void on_sensor_imu_data(const sensor_msgs::msg::Imu::ConstSharedPtr msg);
    void on_vehicle_kinematic_state(const std_msgs::msg::Float64MultiArray::ConstSharedPtr msg);

    // Service callbacks



    // User-defined C++ methods

private:
    // Publishers
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<std_msgs::msg::Float64MultiArray>> vehicle_control_command_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<std_msgs::msg::Float64MultiArray>> vehicle_trajectory_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<std_msgs::msg::Float64MultiArray>> perception_fused_objects_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<std_msgs::msg::Float64MultiArray>> perception_traffic_signs_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<sensor_msgs::msg::Image>> perception_lane_markings_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<std_msgs::msg::Bool>> safety_emergency_stop_pub_;

    // Subscribers
    rclcpp::Subscription<sensor_msgs::msg::PointCloud2>::SharedPtr sensor_lidar_points_sub_;
    rclcpp::Subscription<sensor_msgs::msg::Image>::SharedPtr sensor_camera_front_image_sub_;
    rclcpp::Subscription<sensor_msgs::msg::Imu>::SharedPtr sensor_imu_data_sub_;
    rclcpp::Subscription<std_msgs::msg::Float64MultiArray>::SharedPtr vehicle_kinematic_state_sub_;

    // Services


    // Timers
    rclcpp::TimerBase::SharedPtr control_timer_timer_;
    rclcpp::TimerBase::SharedPtr perception_timer_timer_;
    rclcpp::TimerBase::SharedPtr planning_timer_timer_;

    // Lifecycle state tracking
    std::atomic<bool> is_active_{false};
    bool control_timer_was_active_{false};
    bool perception_timer_was_active_{false};
    bool planning_timer_was_active_{false};

    
    // Processing control
    bool enable_processing_{true};

    // Parameters
    double control_frequency_;
    double perception_frequency_;
    double planning_frequency_;
    double max_velocity_;
    double max_acceleration_;
    double safety_distance_;
    double time_to_collision_threshold_;
    // Parameter traffic_sign_detector_path of type string not supported in member variables
    // Parameter lane_detector_path of type string not supported in member variables
    // Parameter behavior_predictor_path of type string not supported in member variables

    // Latest message storage (per-subscriber)
    sensor_msgs::msg::PointCloud2::ConstSharedPtr latest_sensor_lidar_points_;
    sensor_msgs::msg::Image::ConstSharedPtr latest_sensor_camera_front_image_;
    sensor_msgs::msg::Imu::ConstSharedPtr latest_sensor_imu_data_;
    std_msgs::msg::Float64MultiArray::ConstSharedPtr latest_vehicle_kinematic_state_;

    // CUDA kernel member variables

    // Helper methods
    void init_parameters();
    void init_publishers();
    void init_subscribers();
    void init_services();
    void init_timers();
};


#endif // AUTONOMOUS_VEHICLE_CONTROLLER_NODE_HPP
