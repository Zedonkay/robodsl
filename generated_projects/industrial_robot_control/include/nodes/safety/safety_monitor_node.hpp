// Generated by RoboDSL - DO NOT EDIT

#ifndef SAFETY_MONITOR_NODE_HPP
#define SAFETY_MONITOR_NODE_HPP

// Standard includes
#include <memory>
#include <string>
#include <vector>
#include <map>
#include <cmath>
#include <functional>
#include <thread>
#include <atomic>

// ROS2 includes
#include <rclcpp/rclcpp.hpp>

// Message includes
#include <geometry_msgs/msg/wrench_stamped.hpp>
#include <sensor_msgs/msg/joint_state.hpp>
#include <std_msgs/msg/bool.hpp>

// Additional ROS2 includes

// CUDA includes (if needed)

// OpenCV includes (if needed)

// Type definitions
#ifndef __UCHAR_TYPE__
typedef unsigned char uchar;
#endif

// Forward declarations for custom types

// CUDA parameter structs


class Safety_monitorNode : public rclcpp::Node {
public:
    explicit Safety_monitorNode(const rclcpp::NodeOptions& options = rclcpp::NodeOptions());
    virtual ~Safety_monitorNode();


    // Timer callbacks
    void on_safety_timer();

    // Subscriber callbacks
    void on_joint_states(const sensor_msgs::msg::JointState::ConstSharedPtr msg);
    void on_force_sensor(const geometry_msgs::msg::WrenchStamped::ConstSharedPtr msg);
    void on_collision_warning(const std_msgs::msg::Bool::ConstSharedPtr msg);
    void on_emergency_stop(const std_msgs::msg::Bool::ConstSharedPtr msg);

    // Service callbacks



    // User-defined C++ methods

private:
    // Publishers
    std::shared_ptr<rclcpp::Publisher<std_msgs::msg::Bool>> safety_status_pub_;
    std::shared_ptr<rclcpp::Publisher<std_msgs::msg::Bool>> emergency_command_pub_;

    // Subscribers
    rclcpp::Subscription<sensor_msgs::msg::JointState>::SharedPtr joint_states_sub_;
    rclcpp::Subscription<geometry_msgs::msg::WrenchStamped>::SharedPtr force_sensor_sub_;
    rclcpp::Subscription<std_msgs::msg::Bool>::SharedPtr collision_warning_sub_;
    rclcpp::Subscription<std_msgs::msg::Bool>::SharedPtr emergency_stop_sub_;

    // Services


    // Timers
    rclcpp::TimerBase::SharedPtr safety_timer_timer_;

    // Lifecycle state tracking

    
    // Processing control
    bool enable_processing_{true};

    // Parameters
    double safety_check_frequency_;
    double max_force_threshold_;
    double max_velocity_threshold_;
    double max_acceleration_threshold_;

    // Latest message storage (per-subscriber)
    sensor_msgs::msg::JointState::ConstSharedPtr latest_joint_states_;
    geometry_msgs::msg::WrenchStamped::ConstSharedPtr latest_force_sensor_;
    std_msgs::msg::Bool::ConstSharedPtr latest_collision_warning_;
    std_msgs::msg::Bool::ConstSharedPtr latest_emergency_stop_;

    // CUDA kernel member variables

    // Helper methods
    void init_parameters();
    void init_publishers();
    void init_subscribers();
    void init_services();
    void init_timers();
};


#endif // SAFETY_MONITOR_NODE_HPP
