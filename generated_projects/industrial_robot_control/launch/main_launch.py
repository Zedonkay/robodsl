#!/usr/bin/env python3
"""
Launch all nodes from RoboDSL specification

This file was auto-generated by RoboDSL.
"""

from launch import LaunchDescription
from launch_ros.actions import Node
from launch.actions import DeclareLaunchArgument
from launch.substitutions import LaunchConfiguration

def generate_launch_description():
    # Declare launch arguments
    launch_arguments = [
        DeclareLaunchArgument(
            'use_sim_time',
            default_value='false',
            description='Use simulation time'
        ),
        DeclareLaunchArgument(
            'log_level',
            default_value='info',
            description='Log level for all nodes'
        ),
    ]
    
    # Create nodes
    nodes = []
    # industrial_robot_controller node
    industrial_robot_controller_node = Node(
        package='robodsl_package',
        executable='industrial_robot_controller_node',
        name='industrial_robot_controller_node',
        namespace='/industrial_robot_controller',
        output='screen',
        parameters=[
            {'control_frequency': 0.0},
            {'trajectory_planning_frequency': 0.0},
            {'collision_detection_frequency': 0.0},
            {'force_control_frequency': 0.0},
            {'max_joint_velocity': 0.0},
            {'max_joint_acceleration': 0.0},
            {'safety_margin': 0.0},
            {'force_threshold': 0.0},
            {'prediction_horizon': 0.0},
            {'trajectory_smoothing': 0.0},
            {'joint_limits': ""},
            {'trajectory_optimizer_path': ""},
            {'collision_predictor_path': ""},
            {'force_estimator_path': ""},
            {'use_sim_time': LaunchConfiguration("use_sim_time")},
        ],
        arguments=['--ros-args', '--log-level', LaunchConfiguration('log_level')],
    )
    nodes.append(industrial_robot_controller_node)
    # safety_monitor node
    safety_monitor_node = Node(
        package='robodsl_package',
        executable='safety_monitor_node',
        name='safety_monitor_node',
        namespace='/safety_monitor',
        output='screen',
        parameters=[
            {'safety_check_frequency': 0.0},
            {'max_force_threshold': 0.0},
            {'max_velocity_threshold': 0.0},
            {'max_acceleration_threshold': 0.0},
            {'use_sim_time': LaunchConfiguration("use_sim_time")},
        ],
        arguments=['--ros-args', '--log-level', LaunchConfiguration('log_level')],
    )
    nodes.append(safety_monitor_node)
    # robot_coordinator node
    robot_coordinator_node = Node(
        package='robodsl_package',
        executable='robot_coordinator_node',
        name='robot_coordinator_node',
        namespace='/robot_coordinator',
        output='screen',
        parameters=[
            {'coordination_frequency': 0.0},
            {'inter_robot_safety_distance': 0.0},
            {'use_sim_time': LaunchConfiguration("use_sim_time")},
        ],
        arguments=['--ros-args', '--log-level', LaunchConfiguration('log_level')],
    )
    nodes.append(robot_coordinator_node)

    return LaunchDescription(launch_arguments + nodes) 