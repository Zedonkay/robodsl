// Generated by RoboDSL - DO NOT EDIT

#ifndef AUTONOMOUS_NAVIGATOR_NODE_HPP
#define AUTONOMOUS_NAVIGATOR_NODE_HPP

// Standard includes
#include <memory>
#include <string>
#include <vector>
#include <map>
#include <cmath>
#include <functional>
#include <thread>
#include <atomic>

// ROS2 includes
#include <rclcpp/rclcpp.hpp>
#include <rclcpp_lifecycle/lifecycle_node.hpp>
#include <rclcpp_lifecycle/lifecycle_publisher.hpp>
#include <rclcpp_lifecycle/node_interfaces/lifecycle_node_interface.hpp>

// Message includes
#include <geometry_msgs/msg/twist.hpp>
#include <nav_msgs/msg/occupancy_grid.hpp>
#include <nav_msgs/msg/odometry.hpp>
#include <nav_msgs/msg/path.hpp>
#include <sensor_msgs/msg/image.hpp>
#include <sensor_msgs/msg/point_cloud2.hpp>
#include <tf2_msgs/msg/tf_message.hpp>
#include <visualization_msgs/msg/marker_array.hpp>

// Additional ROS2 includes

// CUDA includes (if needed)

// OpenCV includes (if needed)

// Type definitions
#ifndef __UCHAR_TYPE__
typedef unsigned char uchar;
#endif

// Forward declarations for custom types

// CUDA parameter structs


class Autonomous_navigatorNode : public rclcpp_lifecycle::LifecycleNode {
public:
    explicit Autonomous_navigatorNode(const rclcpp::NodeOptions& options = rclcpp::NodeOptions());
    virtual ~Autonomous_navigatorNode();

    // Lifecycle callbacks
    rclcpp_lifecycle::node_interfaces::LifecycleNodeInterface::CallbackReturn 
    on_configure(const rclcpp_lifecycle::State& previous_state) override;
    
    rclcpp_lifecycle::node_interfaces::LifecycleNodeInterface::CallbackReturn 
    on_activate(const rclcpp_lifecycle::State& previous_state) override;
    
    rclcpp_lifecycle::node_interfaces::LifecycleNodeInterface::CallbackReturn 
    on_deactivate(const rclcpp_lifecycle::State& previous_state) override;
    
    rclcpp_lifecycle::node_interfaces::LifecycleNodeInterface::CallbackReturn 
    on_cleanup(const rclcpp_lifecycle::State& previous_state) override;
    
    rclcpp_lifecycle::node_interfaces::LifecycleNodeInterface::CallbackReturn 
    on_shutdown(const rclcpp_lifecycle::State& previous_state) override;

    // Timer callbacks
    void on_slam_timer();
    void on_planning_timer();

    // Subscriber callbacks
    void on_velodyne_points(const sensor_msgs::msg::PointCloud2::ConstSharedPtr msg);
    void on_camera_image_raw(const sensor_msgs::msg::Image::ConstSharedPtr msg);
    void on_odom(const nav_msgs::msg::Odometry::ConstSharedPtr msg);
    void on_tf(const tf2_msgs::msg::TFMessage::ConstSharedPtr msg);

    // Service callbacks



    // User-defined C++ methods

private:
    // Publishers
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<nav_msgs::msg::OccupancyGrid>> navigation_occupancy_grid_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<visualization_msgs::msg::MarkerArray>> navigation_detected_objects_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<nav_msgs::msg::Path>> navigation_planned_path_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<geometry_msgs::msg::Twist>> cmd_vel_pub_;
    std::shared_ptr<rclcpp_lifecycle::LifecyclePublisher<sensor_msgs::msg::Image>> navigation_semantic_map_pub_;

    // Subscribers
    rclcpp::Subscription<sensor_msgs::msg::PointCloud2>::SharedPtr velodyne_points_sub_;
    rclcpp::Subscription<sensor_msgs::msg::Image>::SharedPtr camera_image_raw_sub_;
    rclcpp::Subscription<nav_msgs::msg::Odometry>::SharedPtr odom_sub_;
    rclcpp::Subscription<tf2_msgs::msg::TFMessage>::SharedPtr tf_sub_;

    // Services


    // Timers
    rclcpp::TimerBase::SharedPtr slam_timer_timer_;
    rclcpp::TimerBase::SharedPtr planning_timer_timer_;

    // Lifecycle state tracking
    std::atomic<bool> is_active_{false};
    bool slam_timer_was_active_{false};
    bool planning_timer_was_active_{false};

    
    // Processing control
    bool enable_processing_{true};

    // Parameters
    double map_resolution_;
    int map_width_;
    int map_height_;
    double min_point_distance_;
    double max_point_distance_;
    // Parameter yolo_model_path of type string not supported in member variables
    // Parameter semantic_model_path of type string not supported in member variables
    double confidence_threshold_;
    double max_linear_velocity_;
    double max_angular_velocity_;
    double path_planning_frequency_;
    double slam_update_frequency_;

    // Latest message storage (per-subscriber)
    sensor_msgs::msg::PointCloud2::ConstSharedPtr latest_velodyne_points_;
    sensor_msgs::msg::Image::ConstSharedPtr latest_camera_image_raw_;
    nav_msgs::msg::Odometry::ConstSharedPtr latest_odom_;
    tf2_msgs::msg::TFMessage::ConstSharedPtr latest_tf_;

    // CUDA kernel member variables

    // Helper methods
    void init_parameters();
    void init_publishers();
    void init_subscribers();
    void init_services();
    void init_timers();
};


#endif // AUTONOMOUS_NAVIGATOR_NODE_HPP
