// Generated by RoboDSL - DO NOT EDIT

#ifndef ROBOT_LOCALIZER_NODE_HPP
#define ROBOT_LOCALIZER_NODE_HPP

// Standard includes
#include <memory>
#include <string>
#include <vector>
#include <map>
#include <cmath>
#include <functional>
#include <thread>
#include <atomic>

// ROS2 includes
#include <rclcpp/rclcpp.hpp>

// Message includes
#include <geometry_msgs/msg/pose_stamped.hpp>
#include <nav_msgs/msg/odometry.hpp>
#include <nav_msgs/msg/path.hpp>
#include <sensor_msgs/msg/imu.hpp>
#include <sensor_msgs/msg/point_cloud2.hpp>

// Additional ROS2 includes

// CUDA includes (if needed)

// OpenCV includes (if needed)

// Type definitions
#ifndef __UCHAR_TYPE__
typedef unsigned char uchar;
#endif

// Forward declarations for custom types

// CUDA parameter structs


class Robot_localizerNode : public rclcpp::Node {
public:
    explicit Robot_localizerNode(const rclcpp::NodeOptions& options = rclcpp::NodeOptions());
    virtual ~Robot_localizerNode();


    // Timer callbacks
    void on_localization_timer();

    // Subscriber callbacks
    void on_odom(const nav_msgs::msg::Odometry::ConstSharedPtr msg);
    void on_imu_data(const sensor_msgs::msg::Imu::ConstSharedPtr msg);
    void on_velodyne_points(const sensor_msgs::msg::PointCloud2::ConstSharedPtr msg);

    // Service callbacks



    // User-defined C++ methods

private:
    // Publishers
    std::shared_ptr<rclcpp::Publisher<geometry_msgs::msg::PoseStamped>> robot_pose_pub_;
    std::shared_ptr<rclcpp::Publisher<nav_msgs::msg::Path>> robot_trajectory_pub_;

    // Subscribers
    rclcpp::Subscription<nav_msgs::msg::Odometry>::SharedPtr odom_sub_;
    rclcpp::Subscription<sensor_msgs::msg::Imu>::SharedPtr imu_data_sub_;
    rclcpp::Subscription<sensor_msgs::msg::PointCloud2>::SharedPtr velodyne_points_sub_;

    // Services


    // Timers
    rclcpp::TimerBase::SharedPtr localization_timer_timer_;

    // Lifecycle state tracking

    
    // Processing control
    bool enable_processing_{true};

    // Parameters
    double localization_frequency_;
    bool use_ekf_;
    bool use_particle_filter_;

    // Latest message storage (per-subscriber)
    nav_msgs::msg::Odometry::ConstSharedPtr latest_odom_;
    sensor_msgs::msg::Imu::ConstSharedPtr latest_imu_data_;
    sensor_msgs::msg::PointCloud2::ConstSharedPtr latest_velodyne_points_;

    // CUDA kernel member variables

    // Helper methods
    void init_parameters();
    void init_publishers();
    void init_subscribers();
    void init_services();
    void init_timers();
};


#endif // ROBOT_LOCALIZER_NODE_HPP
