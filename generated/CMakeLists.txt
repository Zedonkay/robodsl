# Generated by RoboDSL - DO NOT EDIT
cmake_minimum_required(VERSION 3.8)
project(robodsl_project LANGUAGES CXX CUDA)

# Set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CUDA_STANDARD 17)
set(CMAKE_CUDA_STANDARD_REQUIRED ON)

# Find required packages
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rclcpp_components REQUIRED)

# Set include directories
include_directories(
  include
  ${CMAKE_CURRENT_SOURCE_DIR}/include
)

# Add CUDA specific flags
set(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} -std=c++17 --expt-relaxed-constexpr")

# Add library for CUDA kernels
add_library(cuda_kernels
  src/cuda/cuda_kernels.cu
)
target_include_directories(cuda_kernels PUBLIC
  ${CMAKE_CURRENT_SOURCE_DIR}/include
)
target_link_libraries(cuda_kernels
  CUDA::cudart
  CUDA::cuda_driver
)

# Add node executables

# vector_ops node
add_executable(vector_ops_node
  src/vector_ops_node.cpp
)
target_include_directories(vector_ops_node PUBLIC
  ${CMAKE_CURRENT_SOURCE_DIR}/include
)
target_link_libraries(vector_ops_node
  rclcpp::rclcpp
  rclcpp_components::component
  cuda_kernels
)

# Install include files
install(
  DIRECTORY include/
  DESTINATION include/
)

# Install launch files
install(
  DIRECTORY launch/
  DESTINATION share/${PROJECT_NAME}/launch
)

# Install config files
install(
  DIRECTORY config/
  DESTINATION share/${PROJECT_NAME}/config
)

# Export dependencies
ament_export_dependencies(ament_cmake rclcpp rclcpp_components)

# Export includes
ament_export_include_directories(include)

# Export libraries
ament_export_libraries(cuda_kernels)

# Generate package configuration
ament_package()
